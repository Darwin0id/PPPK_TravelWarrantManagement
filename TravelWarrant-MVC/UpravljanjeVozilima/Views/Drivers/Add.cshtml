@using UpravljanjeVozilima.Models
@model Person
@{
    ViewBag.Title = "Dodaj vozača";
}

<div class="d-flex flex-column h-100 bg-light rounded-lg box-shadow-lg p-4">
<div class="py-2 p-md-3">

<!-- NASLOV -->
<h1 class="h3 mb-3 pb-2 text-center text-sm-left">Dodaj vozača</h1>
<!-- // -->

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <!-- FORMA DODAVANJA -->
    <div class="row">

        <!-- IME -->
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.FName)
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            <i class="fe fe-user"></i>
                        </span>
                    </div>
                    @Html.EditorFor(model => model.FName, new {htmlAttributes = new {@class = "form-control", placeholder = "npr. Pero"}})
                    @Html.ValidationMessageFor(model => model.FName, "", new {@class = "text-danger d-block w-100 pt-2"})
                </div>
            </div>
        </div>
        <!-- // -->

        <!-- PREZIME -->
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.LName)
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            <i class="fe fe-user"></i>
                        </span>
                    </div>
                    @Html.EditorFor(model => model.LName, new {htmlAttributes = new {@class = "form-control", placeholder = "npr. Perić"}})
                    @Html.ValidationMessageFor(model => model.LName, "", new {@class = "text-danger d-block w-100 pt-2"})
                </div>
            </div>
        </div>
        <!-- // -->

        <!-- LICENCA -->
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.DriverLicenseId)
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            <i class="fe fe-credit-card"></i>
                        </span>
                    </div>
                    @Html.EditorFor(model => model.DriverLicenseId, new {htmlAttributes = new {@class = "form-control", data_licenseid="true", placeholder = "npr. 11234521"}})
                    @Html.ValidationMessageFor(model => model.DriverLicenseId, "", new {@class = "text-danger d-block w-100 pt-2"})
                </div>
            </div>
        </div>
        <!-- // -->

        <!-- TELEFON -->
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Phone)
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            <i class="fe fe-credit-card"></i>
                        </span>
                    </div>
                    @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "form-control", data_phone="true", placeholder = "npr. (09X)00000"}})
                    @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger d-block w-100 pt-2"})
                </div>
            </div>
        </div>
        <!-- // -->

        <div class="col-12">
            <hr class="mt-2 mb-4">
            <div class="d-flex flex-wrap justify-content-between align-items-center">
                <button class="btn btn-primary mt-3 mt-sm-0" type="submit"><i class="fe-save font-size-lg mr-2"></i>Dodaj vozača</button>
            </div>
        </div>


    </div>
}
    </div>
    </div>

<!-- JAVASCRIPT -->
@section scripts{
    <script type="text/javascript">            
        //CALLBACK
        $(document).on("submit", "form", function (e) {
            e.preventDefault();          
            const form = $(e.target);
            let vozac = {};
            
            if (form.valid()) {
                const params = form.serializeArray();
                params.forEach(param => {
                  if (param.name.lastIndexOf('__') !== -1) return;
                    let propertyName = param.name.substr(param.name.lastIndexOf('.') + 1);   
                    vozac[propertyName] = param.value;
                  });          
                                
                $.ajax({
                  url: '@Url.Action(controllerName: "Drivers", actionName: "Add")',
                  data: vozac,
                  method: 'POST',
                  statusCode: {
                    200: function () {
                        Swal.fire({
                          icon: 'success',
                          title: 'Uspješno ste dodali vozača!',
                          text: "Želite li dodati još vozača?",
                          showCancelButton: true,
                          confirmButtonText: `Dodaj još vozača`,
                          cancelButtonText: `Povratak`,
                        }).then((result) => {
                          if (!result.isConfirmed) {
                            var url = '@Url.Action(controllerName: "Drivers", actionName: "Index")';
                            window.location.href = url;
                          } else {
                              $("form")[0].reset()
                          }
                        })
                    },
                    400: function () {
                        Toast.fire({ icon: 'error', title: 'Dogodila se neočekivana pogreška!'})
                    }
                   }
                 })
                .fail(function (xhr, txtStatus, error) {
                    console.log('status', xhr.status, 'statusText', xhr.statusText);
                    console.log('txtStatus', txtStatus);
                    console.log('error', error);
                });
            }
            
        })
    </script>
}